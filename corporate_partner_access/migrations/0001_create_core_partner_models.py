# Generated by Django 4.2.20 on 2025-08-05 02:41

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import model_utils.fields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('course_overviews', '0029_alter_historicalcourseoverview_options'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CorporatePartner',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('code', models.CharField(max_length=255, unique=True)),
                ('name', models.CharField(max_length=255)),
                ('logo', models.ImageField(blank=True, null=True, upload_to='partner_logos/')),
                ('homepage_url', models.URLField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Corporate Partner',
                'verbose_name_plural': 'Corporate Partners',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='CorporatePartnerCatalog',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('slug', models.SlugField(blank=True, max_length=255, unique=True)),
                ('name', models.CharField(help_text='Human friendly name', max_length=255)),
                ('course_enrollment_limit', models.PositiveIntegerField(default=0, help_text='Max enrollments allowed in this catalog.')),
                ('user_limit', models.PositiveIntegerField(default=0, help_text='Max users allowed in this catalog.')),
                ('is_self_enrollment', models.BooleanField(default=False)),
                ('available_start_date', models.DateTimeField(blank=True, null=True)),
                ('available_end_date', models.DateTimeField(blank=True, null=True)),
                ('custom_courses', models.BooleanField(default=False, help_text='If True, allows custom courses.')),
                ('authorization_additional_message', models.TextField(blank=True, null=True)),
                ('support_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('is_public', models.BooleanField(default=False)),
                ('catalog_alternative_link', models.URLField(blank=True, null=True)),
                ('corporate_partner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='catalogs', to='corporate_partner_access.corporatepartner')),
            ],
            options={
                'verbose_name': 'Corporate Partner Catalog',
                'verbose_name_plural': 'Corporate Partner Catalogs',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='CorporatePartnerCatalogLearner',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('active', models.BooleanField(default=True)),
                ('catalog', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='corporate_partner_access.corporatepartnercatalog')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Corporate Partner Catalog Learner',
                'verbose_name_plural': 'Corporate Partner Catalog Learners',
                'unique_together': {('catalog', 'user')},
            },
        ),
        migrations.CreateModel(
            name='CorporatePartnerCatalogEmailRegex',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('regex', models.CharField(help_text='Regex pattern for email validation.', max_length=500)),
                ('catalog', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='email_regexes', to='corporate_partner_access.corporatepartnercatalog')),
            ],
        ),
        migrations.CreateModel(
            name='CorporatePartnerCatalogCourse',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('position', models.PositiveIntegerField(default=0, help_text='Ordering of the course within the catalog.')),
                ('catalog', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='corporate_partner_access.corporatepartnercatalog')),
                ('course_overview', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='course_overviews.courseoverview')),
            ],
            options={
                'verbose_name': 'Corporate Partner Catalog Course',
                'verbose_name_plural': 'Corporate Partner Catalog Courses',
                'ordering': ['position'],
            },
        ),
        migrations.AddField(
            model_name='corporatepartnercatalog',
            name='courses',
            field=models.ManyToManyField(related_name='partner_catalogs', through='corporate_partner_access.CorporatePartnerCatalogCourse', to='course_overviews.courseoverview'),
        ),
        migrations.AddField(
            model_name='corporatepartnercatalog',
            name='learners',
            field=models.ManyToManyField(related_name='enrolled_catalogs', through='corporate_partner_access.CorporatePartnerCatalogLearner', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddIndex(
            model_name='corporatepartnercatalogcourse',
            index=models.Index(fields=['catalog', 'course_overview'], name='catalog_course_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='corporatepartnercatalogcourse',
            unique_together={('catalog', 'course_overview')},
        ),
    ]
